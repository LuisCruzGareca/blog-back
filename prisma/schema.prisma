// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
    id Int @id @default(autoincrement())
    name String
    email String @unique
    password String
    posts Post[]
    comments Comment[]
    likes Like[]
}

model Post{
    id Int @id @default(autoincrement())
    title String
    content String  @db.LongText
    createdAt DateTime @default(now())
    updatedAt    DateTime @updatedAt
    authorId Int
    author   User   @relation(fields: [authorId], references: [id])
    postCategories PostCategories[]
    comments Comment[]
    likes Like[]
    photo Photo[]
}
model Photo {
  id         Int       @id @default(autoincrement())
  path        String    // URL p√∫blica o ruta relativa al archivo
  createdAt  DateTime  @default(now())
  postId    Int
  post      Post    @relation(fields: [postId], references: [id])

}
model Categories{
  id Int @id @default(autoincrement())
  name String
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postCategories PostCategories[]
}


model PostCategories {
  postId Int
  categoriesId  Int
  addedAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  categorie  Categories  @relation(fields: [categoriesId], references: [id])

  @@id([postId, categoriesId]) 
}

model Comment{
    id Int @id  @default(autoincrement())
    comment String  @db.LongText
    createAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    postId Int
    authorId Int
    author User @relation(fields: [authorId], references: [id])
    post Post @relation(fields: [postId], references: [id])
}

model Like{
    postId Int
    userId Int
    createAt DateTime @default(now())
    post Post @relation(fields: [postId], references: [id])
    user User @relation(fields: [userId], references: [id])

  @@id([postId, userId]) 
}
